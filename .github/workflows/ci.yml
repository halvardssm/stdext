name: ci

permissions:
  contents: write

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 5
    strategy:
      fail-fast: false
      matrix:
        deno:
          - v2.x
          - canary
        os:
          - ubuntu-latest
          - windows-latest
          - macOS-latest

    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Set up Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: ${{ matrix.deno }}

      - name: Run tests
        run: deno task test

      - name: Generate lcov
        run: deno task cov:gen

      - name: Upload coverage
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          name: ${{ matrix.os }}-${{ matrix.deno }}

  check:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: canary

      - name: Format & Lint
        run: deno task check

      - name: Build
        run: deno task build:wasm:check

  publish-dry-run:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Set up Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: canary

      - name: Publish (dry run)
        run: deno publish --dry-run
